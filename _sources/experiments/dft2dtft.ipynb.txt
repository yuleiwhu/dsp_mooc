{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/mac/anaconda3/envs/Sphinx/lib/python3.6/site-packages/matplotlib/backends/backend_agg.py:211: RuntimeWarning: Glyph 8722 missing from current font.\n",
      "  font.set_text(s, 0.0, flags=flags)\n",
      "/Users/mac/anaconda3/envs/Sphinx/lib/python3.6/site-packages/matplotlib/backends/backend_agg.py:180: RuntimeWarning: Glyph 8722 missing from current font.\n",
      "  font.set_text(s, 0, flags=flags)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "%matplotlib inline\n",
    "from numpy import *\n",
    "from matplotlib.pyplot import *\n",
    "\n",
    "N = 128\n",
    "n = arange(0,N)\n",
    "xn = exp(-0.2*n)\n",
    "\n",
    "Xk = fft.fft(xn)\n",
    "\n",
    "# 定义插值函数\n",
    "def phi(w,k):\n",
    "    return (sin(N*(w-2*pi*k/N)/2)/N/sin((w-2*pi*k/N)/2) * exp(-1j*(N-1)/2*(w-2*pi*k/N)))\n",
    "# 频域插值方法\n",
    "w = arange(-2*pi,2*pi,0.001)\n",
    "Xw = zeros([len(w),])\n",
    "for k in range(0,N):\n",
    "    Xw = Xw + phi(w,k)*Xk[k]\n",
    "    \n",
    "plot(w,abs(Xw),label='Interpolation in Freq.')\n",
    "\n",
    "# 时域补零方法\n",
    "w = linspace(0,2*pi,len(w))\n",
    "plot(w,abs(fft.fft(xn,len(w))),'--r',label='Zero-padding in Time')\n",
    "\n",
    "legend(loc='best')\n",
    "\n",
    "xlabel('omega')\n",
    "\n",
    "show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
