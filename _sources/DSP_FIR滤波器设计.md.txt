# FIR 数字滤波器设计

[TOC]

## 什么是FIR滤波器？

FIR(Finite Impulse Response)，即有限冲激响应滤波器。因此，N阶FIR滤波器的一般形式可以写成如下公式：
$$
H(z) = \sum_{i=0}^{N}h[n]z^{-n}
$$
其中，$h[n]$为滤波器的冲激响应系数。设计FIR滤波器，实际上就是要根据给定滤波器指标，设计这些冲激响应系数$h[n]$。一般的，FIR滤波器的设计方法可以有如下两种： 

1. 窗函数方法
2. 计算机辅助设计方法



![image-20181119193100475](assets/image-20181119193100475-2627060.png)

另外，根据输入和输出信号的统计特性，我们还可以设计最佳滤波器，当然这一部分内容属于《现代数字信号处理》课程的范畴，大家有兴趣的话可以参考研究生课程《现代信号与信息处理》。

## FIR滤波器与IIR滤波器的比较

在具体讲解FIR滤波器设计方法之前，有必要横向比较一下FIR和IIR两种类型滤波器，这样便于我们在实际应用中，根据需求选择哪一种类型。两种类别滤波的比较可以用下面这个表格来展示：

|                        | FIR滤波器                        | IIR滤波器                                                    |
| ---------------------- | :------------------------------- | ------------------------------------------------------------ |
| 零极点                 | 没有反馈（只有零点）             | 有反馈（既有零点也有极点）                                   |
| 稳定性                 | 肯定稳定                         | 可能会不稳定                                                 |
| 相位                   | 很容易设计线性相位滤波器（对称） | 很难控制相位响应                                             |
| 阶数                   | 一般阶数比较高（20-2000）        | 阶数一般要小于FIR滤波器的1/10，即（4-20）                    |
| 与连续时间滤波器的关系 | 与连续时间滤波器没有关联         | 都可以找到连续模拟滤波器的原型（Butterworth、Chebychef等等） |

从上表可以发现，FIR滤波器的优点是：

1. 绝对BIBO稳定
2. 容易设计线性相位滤波器

当然，相对于IIR滤波器，也有很明显的缺点：

1. 阶数很高，所以计算复杂度高
2. 设计相对复杂，不能从模拟滤波器直接映射过来

因此，在实际应用中，我们需要根据需求，来选择到底是使用FIR滤波器还是IIR滤波器。

## FIR 滤波器设计方法：窗函数法

### 窗函数法的理论依据

已知待设计滤波器的频率响应$H_d(e^{j\omega})$，设计时域序列$h_t[n]$，使其频率响应$H_t(e^{j\omega})$与待设计滤波器频率响应之间的误差最小：
$$
\begin{split}
h_t[n] &= \arg\min_{h_t}\left\{ \phi(h) = \frac{1}{2\pi}\int_{-\infty}^\infty|H_d(e^{j\omega})-H_t(e^{j\omega})|^2d\omega\right\} 
\end{split}
$$
其中，$H_t(e^{j\omega})=\sum_{n=-\infty}^\infty h_t[n]e^{-j\omega n}$

根据Parseval定理，可以知道
$$
\phi(h_t) = \sum_{n=-\infty}^{\infty}|h_d[n]-h_t[n]|^2 = \sum_{n=-M}^{M}|h_d[n]-h_t[n]|^2+\sum_{|n|>M} |h_d[n]|^2
$$
上式第二项为跟$h_t$无关的量，因此只有当第一项中，$h_t[n]=h_d[n]$的时候，$\phi$取最小值，即
$$
h_t[n]=h_d[n],\quad \quad -M\leq n \leq M
$$
这里的$h_d[n]$为待设计滤波器的频率响应$H_d(e^{j\omega})$的逆离散时间傅里叶变换，即
$$
h_d[n] = \frac{1}{2\pi}\int_{-\pi}^{\pi}H_d(e^{j\omega})e^{j\omega n}d\omega
$$
因此，此时的最佳估计为
$$
h _ { t } [ n ] = \left\{ \begin{array} { l l } { \mbox{IDTFT} \left\{ H _ { d } \left( e ^ { j \omega } \right) \right\} } & { -M \leq n \leq M } \\ { 0 , } & { \text { otherwise } } \end{array} \right.
$$
或者写成
$$
h_t[n] = h_d[n]\cdot w_R[n]，\quad w _ { R } [ n ] = \left\{ \begin{array} { l l } { 1 , } & { - M \leq n \leq M } \\ { 0 , } & { \text { otherwise } } \end{array} \right.
$$
上式实际上是对待设计滤波器频率响应的冲激响应序列进行了截断，也就等效于在时域乘以一个矩形窗函数$w_R[n]$。

![image-20181119200219174](assets/image-20181119200219174-2628939.png)

另外，为了使得设计的滤波器为因果的，还需要将上式的冲激响应序列向右平移M个单位，使得$h_t[n]=0,\forall n<0$，等效于在频率乘以一个$e^{-j\omega M}$，改变相位响应，但是不会改变幅度响应。

![image-20181119195512464](assets/image-20181119195512464-2628512.png)

### 基于窗函数的FIR低通滤波器设计

我们已经学过，理想低通滤波器的频率响应为
$$
H _ { L P } \left( e ^ { j \omega } \right) = \left\{ \begin{array} { l l } { 1 } & { | \omega | < \omega _ { c } } \\ { 0 } & { \omega _ { c } < | \omega | < \pi } \end{array} \right.
$$
幅度谱为

![image-20181119195725162](assets/image-20181119195725162-2628645.png)

且冲激响应序列为双边无限长的Sinc函数序列
$$
h _ { L P } [ n ] = \frac { \sin \omega _ { c } n } { \pi n }
$$
![image-20181119195813897](assets/image-20181119195813897-2628693.png)

因此，根据理想低通滤波器设计的2M阶FIR低通数字滤波器就是对上面这个无限长Sinc函数序列的截断
$$
\hat { h } _ { L P } [ n ] = \left\{ \begin{array} { l l } { \frac { \sin \omega _ { c } ( n - M ) } { \pi ( n - M ) } } & { 0 \leq n \leq 2 M } \\ { 0 } & { \text { otherwise } } \end{array} \right.
$$
![image-20181119195925423](assets/image-20181119195925423-2628765.png)

同时，可以得到该冲激响应序列的频率响应：

![image-20181119200011280](assets/image-20181119200011280-2628811.png)

利用对理想低通滤波器的冲激响应进行截断（或者窗函数）来设计实际的低通滤波器。但是，同时也会发现，通过截断设计的滤波器的频率响应始终在通带和阻带都存在很大的振荡，贴别是在通带到阻带的过渡带边缘会出现很强的过冲。在滤波器设计当中，这种振荡或者过冲肯定不是我们所希望的，那么我们能不能减少或者消除这些振荡或者过冲呢？

1. 增大截断的长度$N$？
2. 改变窗函数$w_R[n]$？
3. 理想低通变成其他类型的低通函数？

**NOTE：请思考上面三个问题？**

### <!--吉布斯效应-->

<!--我们先来试试看第一种方法，增大截断的长度$N$，即$M$增大。不难发现，当我 们增大-->

## <!--FIR滤波器设计方法：计算机辅助设计-->

## <!--最佳滤波器设计方法-->

